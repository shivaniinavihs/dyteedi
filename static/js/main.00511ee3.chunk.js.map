{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","language","dispname","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedkey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","showHtmlPanel","setShowHtmlPanel","showCssPanel","setShowCssPanel","showJsPanel","setShowJsPanel","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAYe,SAASA,EAAOC,GAC3B,IACIC,EAGAD,EAHAC,SACAC,EAEAF,EAFAE,SACAC,EACAH,EADAG,MAAOC,EACPJ,EADOI,SAGX,EAAsBC,oBAAS,GAA/B,mBAAMC,EAAN,KAAYC,EAAZ,KAIA,OACI,sBAAKC,UAAS,wBAAoBF,EAAM,GAAG,aAA3C,UACI,sBAAKE,UAAU,YAAf,UACKN,EACD,wBACIO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAIH,GAAQ,SAAAI,GAAQ,OAAGA,MAHpC,SAII,cAAC,IAAD,CAAiBC,KAAON,EAAOO,IAAcC,WAErD,cAAC,aAAD,CACIC,eAdZ,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAcDA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,QCxClB,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAFG,UAEgBF,EACzB,EAAuBpB,oBAAS,WAC5B,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAc,MAAXC,EAAwBG,KAAKC,MAAMJ,GACX,oBAAjBF,EAECA,IAGAA,KARf,mBAAMvB,EAAN,KAAa8B,EAAb,KAeA,OAHAC,qBAAU,WACNL,aAAaM,QAAQR,EAAYI,KAAKK,UAAUjC,MACjD,CAACwB,EAAaxB,IACV,CAACA,EAAM8B,GC4EHI,MAxFf,WACE,MAAwBb,EAAgB,OAAO,IAA/C,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAM,IAA5C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAK,IAAzC,mBAAOkB,EAAP,KAAWC,EAAX,KACA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KACA,EAA0CxC,oBAAS,GAAnD,mBAAOyC,EAAP,KAAsBC,EAAtB,KACA,EAAwC1C,oBAAS,GAAjD,mBAAO2C,EAAP,KAAqBC,EAArB,KACA,EAAsC5C,oBAAS,GAA/C,mBAAO6C,EAAP,KAAoBC,EAApB,KA8BA,OA5BAjB,qBAAU,WACR,IAAMkB,EAAUC,YAAW,WACzBR,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,gCAMR,KACH,OAAO,kBAAMY,aAAaF,MACzB,CAACd,EAAME,EAAKE,IAmBb,qCACI,sBAAKlC,UAAU,gBAAf,UACF,qBAAKE,QApBgB,WACvBqC,GAAkBD,GAClBK,GAAe,GACfF,GAAgB,IAiBd,kBACA,qBAAKvC,QAfe,WACtBuC,GAAiBD,GACjBD,GAAiB,GACjBI,GAAe,IAYb,iBACA,qBAAKzC,QAVc,WACrByC,GAAgBD,GAChBH,GAAiB,GACjBE,GAAgB,IAOd,2BAEA,sBAAKzC,UAAU,gBAAf,UAEGsC,GACO,cAAC/C,EAAD,CACAE,SAAS,MACTC,SAAS,OACTC,MAAOmC,EACPlC,SAAUmC,IAIjBS,GACD,cAACjD,EAAD,CACEE,SAAS,MACTC,SAAS,MACTC,MAAOqC,EACPpC,SAAUqC,IAGXS,GACD,cAACnD,EAAD,CACAE,SAAS,aACTC,SAAS,KACTC,MAAOuC,EACPtC,SAAUuC,OAIZ,qBAAKnC,UAAU,OAAf,SACE,wBACEoC,OAAQA,EACRW,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eCjFjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.00511ee3.chunk.js","sourcesContent":["import React , {useState} from 'react'\r\nimport \"codemirror/lib/codemirror.css\"\r\nimport \"codemirror/theme/material.css\"\r\nimport \"codemirror/mode/css/css\"\r\nimport \"codemirror/mode/javascript/javascript\"\r\nimport \"codemirror/mode/xml/xml\"\r\nimport {Controlled as ControlledEdi} from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt,faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nexport default function Editor(props) {\r\n    const {\r\n        language,\r\n        dispname,\r\n        value, onChange\r\n    } = props\r\n\r\n    const[open, setOpen]= useState(true)\r\n    function handleChange(editor, data, value) {\r\n        onChange(value)\r\n    }\r\n    return (\r\n        <div className={ `edi-container ${open ?'':'collapsed'}`}>\r\n            <div className=\"edi-title\">\r\n                {dispname}\r\n                <button\r\n                    type='button'\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={()=>setOpen(prevOpen=>!prevOpen)}> \r\n                    <FontAwesomeIcon icon={ open ? faCompressAlt:faExpandAlt}/></button>\r\n            </div>\r\n            <ControlledEdi\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nconst PREFIX='dyteedi'\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedkey=PREFIX+key\r\n    const[value, setValue]=useState(()=>{\r\n        const jsonValue = localStorage.getItem(prefixedkey)\r\n        if(jsonValue!=null) return JSON.parse(jsonValue)\r\n        if(typeof initialValue === 'function')\r\n        {\r\n            return initialValue()\r\n        }\r\n        else{\r\n            return initialValue\r\n        }\r\n\r\n    })\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedkey,JSON.stringify(value))\r\n    }, [prefixedkey, value])\r\n    return [value,setValue]\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\n\n\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html','')\n  const [css, setCss] = useLocalStorage('css','')\n  const [js, setJs] = useLocalStorage('js','')\n  const [srcDoc, setSrcDoc] = useState('')\n  const [showHtmlPanel, setShowHtmlPanel] = useState(true);\n  const [showCssPanel, setShowCssPanel] = useState(false);\n  const [showJsPanel, setShowJsPanel] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>`)\n    }, 250)\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n  const htmlPanelHandler = () => {\n    setShowHtmlPanel(!showHtmlPanel);\n    setShowJsPanel(false)\n    setShowCssPanel(false)\n  };\n\n  const CssPanelHandler = () => {\n    setShowCssPanel(!showCssPanel);\n    setShowHtmlPanel(false);\n    setShowJsPanel(false)\n  };\n\n  const JsPanelHandler = () => {\n    setShowJsPanel(!showJsPanel);\n    setShowHtmlPanel(false);\n    setShowCssPanel(false)\n  };\n  return (\n    <>\n        <div className=\"file-explorer\">\n      <div onClick={htmlPanelHandler}>HTML</div>\n      <div onClick={CssPanelHandler}>CSS</div>\n      <div onClick={JsPanelHandler}>JAVASCRIPT</div>\n    </div>\n      <div className=\"pane top-pane\">\n\n        {showHtmlPanel && \n                <Editor\n                language=\"xml\"\n                dispname=\"HTML\"\n                value={html}\n                onChange={setHtml}\n              />\n        }\n\n        {showCssPanel &&         \n        <Editor\n          language=\"css\"\n          dispname=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />}\n\n        {showJsPanel && \n        <Editor\n        language=\"javaScript\"\n        dispname=\"JS\"\n        value={js}\n        onChange={setJs}\n              />\n        }\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n\n        />\n      </div>\n    </>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}